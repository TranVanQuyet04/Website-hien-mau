import React, { useState } from "react";
import {
  FaTint, FaCheck, FaIdCard, FaSyringe, FaHeartbeat, FaVial,
  FaWeight, FaBirthdayCake, FaCalendarAlt, FaVirus
} from "react-icons/fa";
import "../styles/DonationInfoSection.css";

const BloodInfoSection = () => {
  const [selectedGroup, setSelectedGroup] = useState(null);

  const eligibilityCriteria = [
    { icon: <FaIdCard />, text: "Mang theo ch·ª©ng minh nh√¢n d√¢n/h·ªô chi·∫øu" },
    { icon: <FaSyringe />, text: "Kh√¥ng nghi·ªán ma t√∫y, r∆∞·ª£u bia v√† c√°c ch·∫•t k√≠ch th√≠ch" },
    { icon: <FaVirus />, text: "Kh√¥ng m·∫Øc ho·∫∑c kh√¥ng c√≥ h√†nh vi nguy c∆° l√¢y nhi·ªÖm HIV, vi√™m gan B, vi√™m gan C, v√† c√°c virus truy·ªÅn m√°u" },
    { icon: <FaHeartbeat />, text: "Kh√¥ng m·∫Øc c√°c b·ªánh m√£n t√≠nh ho·∫∑c c·∫•p t√≠nh v·ªÅ tim m·∫°ch, huy·∫øt √°p, h√¥ h·∫•p, d·∫° d√†y‚Ä¶" },
    { icon: <FaVial />, text: "Ch·ªâ s·ªë huy·∫øt s·∫Øc t·ªë (Hb) ‚â•120g/l (‚â•125g/l n·∫øu hi·∫øn t·ª´ 350ml tr·ªü l√™n)" },
    { icon: <FaWeight />, text: "C√¢n n·∫∑ng: Nam ‚â• 45 kg, N·ªØ ‚â• 45 kg" },
    { icon: <FaBirthdayCake />, text: "Ng∆∞·ªùi kh·ªèe m·∫°nh trong ƒë·ªô tu·ªïi t·ª´ 18 ƒë·∫øn 60 tu·ªïi" },
    { icon: <FaCalendarAlt />, text: "Th·ªùi gian gi·ªØa 2 l·∫ßn hi·∫øn m√°u t·ªëi thi·ªÉu 12 tu·∫ßn" },
    { icon: <FaCheck />, text: "K·∫øt qu·∫£ test nhanh √¢m t√≠nh v·ªõi kh√°ng nguy√™n si√™u vi B" },
  ];

  const bloodCompatibility = [
    {
      group: "O-",
      give: "O-, O+, A-, A+, B-, B+, AB-, AB+",
      receive: "O-",
      info: "Nh√≥m m√°u O- l√† nh√≥m m√°u hi·∫øm v√† c√≥ th·ªÉ truy·ªÅn cho b·∫•t k·ª≥ ai. Nh∆∞ng ng∆∞·ªùi O- ch·ªâ c√≥ th·ªÉ nh·∫≠n t·ª´ ch√≠nh h·ªç."
    },
    {
      group: "O+",
      give: "O+, A+, B+, AB+",
      receive: "O-, O+",
      info: "O+ l√† nh√≥m m√°u ph·ªï bi·∫øn nh·∫•t. Ng∆∞·ªùi O+ c√≥ th·ªÉ truy·ªÅn cho c√°c nh√≥m Rh d∆∞∆°ng."
    },
    {
      group: "A-",
      give: "A-, A+, AB-, AB+",
      receive: "O-, A-",
      info: "A- hi·∫øm h∆°n A+. Ng∆∞·ªùi nh√≥m m√°u n√†y c√≥ th·ªÉ truy·ªÅn cho A v√† AB, c·∫£ d∆∞∆°ng v√† √¢m."
    },
    {
      group: "A+",
      give: "A+, AB+",
      receive: "O-, O+, A-, A+",
      info: "A+ ph·ªï bi·∫øn th·ª© hai. C√≥ th·ªÉ nh·∫≠n m√°u t·ª´ c√°c nh√≥m A v√† O b·∫•t k·ª≥ Rh."
    },
  ];

  return (
    <div className="blood-wrapper">
      {/* KH·ªêI 1: TI√äU CHU·∫®N */}
      <div className="section-card">
        <h2 className="section-title gold">üß¨ Ti√™u chu·∫©n tham gia hi·∫øn m√°u</h2>
        <div className="eligibility-grid">
          {eligibilityCriteria.map((item, i) => (
            <div key={i} className="eligibility-card">
              <div className="eligibility-icon">{item.icon}</div>
              <div className="eligibility-text">{item.text}</div>
            </div>
          ))}
        </div>
      </div>

      {/* KHO·∫¢NG TR·∫ÆNG GI·ªÆA 2 KH·ªêI */}
      <div className="section-spacer"></div>

      {/* KH·ªêI 2: NH√ìM M√ÅU */}
      <div className="section-card">
        <h2 className="section-title gold">üíß Nh√≥m m√°u v√† kh·∫£ nƒÉng t∆∞∆°ng th√≠ch</h2>
        <p className="subtitle">T√¨m hi·ªÉu kh·∫£ nƒÉng truy·ªÅn/nh·∫≠n m√°u c·ªßa t·ª´ng nh√≥m m√°u.</p>
        <div className="compatibility-grid">
          {bloodCompatibility.map((item, i) => (
            <div
              key={i}
              className={`compatibility-card ${selectedGroup === i ? "active" : ""}`}
              onClick={() => setSelectedGroup(selectedGroup === i ? null : i)}
            >
              <h3>{item.group}</h3>
              <p><FaCheck /> <strong>C√≥ th·ªÉ cho:</strong> {item.give}</p>
              <p><FaTint /> <strong>C√≥ th·ªÉ nh·∫≠n:</strong> {item.receive}</p>
              {selectedGroup === i && (
                <div className="group-info">
                  <hr />
                  <p>{item.info}</p>
                </div>
              )}
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default BloodInfoSection;
